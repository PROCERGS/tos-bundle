<?php
/*
 * This file is part of the login-cidadao project or it's bundles.
 *
 * (c) Guilherme Donato <guilhermednt on github>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace LoginCidadao\TOSBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;
use LoginCidadao\TOSBundle\Model\AgreementInterface;
use LoginCidadao\TOSBundle\Model\TOSInterface;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * AgreementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AgreementRepository extends EntityRepository
{

    /**
     * @param UserInterface $user
     * @param TOSInterface $terms
     * @return AgreementInterface|null
     */
    public function findAgreementByTerms(UserInterface $user, TOSInterface $terms)
    {
        try {
            return $this->createQueryBuilder('a')
                ->where('a.termsOfService = :terms')
                ->andWhere('a.user = :user')
                ->orderBy('a.agreedAt', 'DESC')
                ->setParameters(compact('user', 'terms'))
                ->setMaxResults(1)
                ->getQuery()->getOneOrNullResult();
        } catch (NonUniqueResultException $e) {
            return null;
        }
    }
}
